#!/bin/sh

# Copyright (c) 2012-2017
# See LICENSE for details.
#
# Israel Jacquez <mrkotfw@gmail.com>

PROGNAME="${0##*/}"
TMPDIR="${TMPDIR:-/tmp}"

# If empty, default to YAUL_ARCH_SH_PREFIX
if [ -z "${YAUL_PROG_SH_PREFIX}" ]; then
    YAUL_PROG_SH_PREFIX=$(printf "%s" "${YAUL_ARCH_SH_PREFIX}")
fi

SH_AS="${YAUL_INSTALL_ROOT}/bin/${YAUL_PROG_SH_PREFIX}-as"
SH_CC="${YAUL_INSTALL_ROOT}/bin/${YAUL_PROG_SH_PREFIX}-gcc"

panic () {
    printf -- "%s: Error: %s\\n" "${PROGNAME}" "${1}" >&2
    exit "${2}"
}

if [ ${#} != 8 ]; then
    printf -- "Usage: %s %s\\n" "${PROGNAME}" "version release-date areas peripherals title master-stack-addr slave-stack-addr 1st-read-addr" >&2
    exit 2
fi

[ -n "${YAUL_INSTALL_ROOT}" ] || panic "Undefined YAUL_INSTALL_ROOT (install root directory)" 1
[ -d "${YAUL_INSTALL_ROOT}" ] || panic "Invalid YAUL_INSTALL_ROOT (install root directory) value" 1
[ -n "${YAUL_ARCH_SH_PREFIX}" ] || panic "Undefined YAUL_ARCH_SH_PREFIX (tool-chain prefix)" 1
[ -x "${SH_AS}" ] || panic "Invalid executable \`${SH_AS}'" 1
[ -x "${SH_CC}" ] || panic "Invalid executable \`${SH_CC}'" 1

tmp1="$(mktemp "${TMPDIR}/XXXX")" || panic "Couldn't create file" 1
tmp2="$(mktemp "${TMPDIR}/XXXX")" || panic "Couldn't create file" 1

clean_up () {
    rm -f "${tmp1}"
    rm -f "${tmp2}"
    exit 0
}

trap clean_up 0 1 2 15

# Sanitize for string
IP_VERSION="${1}"
# Sanitize for integer value
IP_RELEASE_DATE=${2}
# Sanitize for string
IP_AREAS="${3}"
# Sanitize for string
IP_PERIPHERALS="${4}"
# Sanitize for string
IP_TITLE="${5}"
# Sanitize for integer value
IP_MASTER_STACK_ADDR=${6}
# Sanitize for integer value
IP_SLAVE_STACK_ADDR=${7}
# Sanitize for integer value
IP_1ST_READ_ADDR=${8}

awk '
    /\.ascii \"\$VERSION\"/ { sub(/\$VERSION/, "'"${IP_VERSION}"'"); }
    /\.ascii \"\$RELEASE_DATE\"/ { sub(/\$RELEASE_DATE/, "'"${IP_RELEASE_DATE}"'"); }
    /\.ascii \"\$AREAS\"/ { printf ".ascii \"%-10.10s\"\n", "'"${IP_AREAS}"'"; next; }
    /\.ascii \"\$PERIPHERALS\"/ { printf ".ascii \"%-16.16s\"\n", "'"${IP_PERIPHERALS}"'"; next; }
    /\.ascii \"\$TITLE\"/ {
        L = 7;
        # Truncate to 112 characters
        s = "'"${IP_TITLE}"'";
        # Strip out control characters
        gsub(/[\t\r\v\n\f]/, "", s);
        s = substr(s, 0, 112);
        t = s;
        q = length(s);
        l = q;
        while (l > 0) {
            printf ".ascii \"%-16.16s\"\n", t;
            a = ((l - 16) >= 0) ? 16 : l;
            l -= a;
            t = substr(t, a + 1, q - a);
            L--;
        }
        while (L > 0) {
            printf ".ascii \"                \"\n";
            L--;
        }
        next;
    }
    /\.long \$MASTER_STACK_ADDR/ { sub(/\$MASTER_STACK_ADDR/, "'"${IP_MASTER_STACK_ADDR}"'"); }
    /\.long \$SLAVE_STACK_ADDR/ { sub(/\$SLAVE_STACK_ADDR/, "'"${IP_SLAVE_STACK_ADDR}"'"); }
    /\.long \$1ST_READ_ADDR/ { sub(/\$1ST_READ_ADDR/, "'"${IP_1ST_READ_ADDR}"'"); }
    { print; }' "${YAUL_INSTALL_ROOT}/share/yaul/bootstrap/ip.sx" > "${tmp2}"

"${SH_AS}" --fatal-warnings -I"${YAUL_INSTALL_ROOT}/share/yaul/bootstrap" -o "${tmp1}" "${tmp2}"
"${SH_CC}" -Wl,-Map,IP.BIN.map -nostdlib -m2 -mb -nostartfiles -specs=ip.specs "${tmp1}" -o IP.BIN

rm -f "${tmp1}"
rm -f "${tmp2}"
