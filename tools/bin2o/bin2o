#!/bin/sh

# Copyright (c) 2012-2016
# See LICENSE for details.
#
# Dan Potter
# Israel Jacquez <mrkotfw@gmail.com>

PROGNAME="${0##*/}"
TMPDIR="${TMPDIR:-/tmp}"

TARGET="sh-elf"
AFLAGS="--fatal-warnings --isa=sh2 --big --reduce-memory-overheads"
ARCH="elf32-sh"
DATA_SECTION="rodata"

panic () {
    printf -- "${PROGNAME}: Error: ${1}" >&2
    exit ${2}
}

if [ -z "${YAUL_INSTALL_ROOT}" ]; then
    panic "Undefined YAUL_INSTALL_ROOT (install root directory)" 1
fi

tmp1="`mktemp "${TMPDIR}/XXXX"`" || panic "Couldn't create file" 1
tmp2="`mktemp "${TMPDIR}/XXXX"`" || panic "Couldn't create file" 1
tmp3="`mktemp "${TMPDIR}/XXXX"`" || panic "Couldn't create file" 1

clean_up () {
    rm -f "${tmp1}" "${tmp2}" "${tmp3}"
    exit 0
}

trap clean_up 0 1 2 9 15

if [ ${#} != 3 ]; then
    printf -- "Usage: ${PROGNAME} input-file symbol-name output-file\n" >&2
    exit 2
fi

input="${1}"
symbol="${2}"
output="${3}"

# Gotta do a different binary target here depending on the target
(${YAUL_INSTALL_ROOT}/"${TARGET}"/bin/"${TARGET}"-as ${AFLAGS} \
    -o "${tmp3}" || \
    panic "Couldn't assemble file" 1) << EOF
.SECTION ".${DATA_SECTION}"
.ALIGN 2
EOF

cat > "${tmp1}" << EOF
SECTIONS
{
  .${DATA_SECTION} :
  {
     _${symbol} = .;
     *(.data);
     _${symbol}_end = .;
  }
}
EOF

"${YAUL_INSTALL_ROOT}/${TARGET}/bin/${TARGET}-ld" --no-warn-mismatch --format binary --oformat "${ARCH}" "${input}" \
    --format "${ARCH}" "${tmp3}" \
    -o "${tmp2}" -r -T "${tmp1}" || panic "Couldn't link file" 1

"${YAUL_INSTALL_ROOT}/${TARGET}/bin/${TARGET}-objcopy" --set-section-flags ".${DATA_SECTION}=alloc,load,data,readonly" \
    "${tmp2}" "${output}" || panic "Couldn't translate object file" 1
